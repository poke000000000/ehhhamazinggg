--IF YOU USE THIS IN YOUR SCRIPT CREDIT ME.

getgenv().AutoFarmEnabled = false
getgenv().AutoFarmSpeed = 0.01
getgenv().AutoFarmArea = "Spawn" -- Default area
getgenv().AutoHatchAutumnEgg = false
getgenv().AutoEquipBestPets = false
getgenv().AutoHatchSpawnEgg = false
getgenv().AutoUseStarsPotion = false
getgenv().AutoUseGemsPotion = false
getgenv().AutoUseLuckPotion = false
getgenv().AutoUseTreasureHunterPotion = false
getgenv().AutoBuyEggLuck = false
getgenv().AutoBuyMoreGems = false
getgenv().AutoBuyPetSlots = false
getgenv().AutoBuyStarSpawnLuck = false
getgenv().AutoBuyWalkSpeed = false
getgenv().AutoBuyPotionDuration = false
getgenv().AutoChangeWalkSpeed = false
getgenv().WalkSpeedValue = 50 -- Default Walk Speed
getgenv().AutoUseStarsT2Potion = false
getgenv().AutoUseXPT2Potion = false
getgenv().AutoUseGemsT2Potion = false
getgenv().AutoUseTreasureHunterT2Potion = false
getgenv().AutoHatchBeeEgg = false
getgenv().EggOpenAmount = "Open x3" -- Default Egg Open Amount
getgenv().AutoUseStarsT3Potion = false
getgenv().AutoUseLuckT4Potion = false
getgenv().AutoUseTreasureHunterT3Potion = false
getgenv().AutoHatchSnowEgg = false
getgenv().AutoEvolve = false
getgenv().WebhookURL = "" -- Default Webhook URL
getgenv().AutoSendWebhook = false
getgenv().AutoCompleteQuests = false
getgenv().AutoHatchMineEgg = false
getgenv().AutoUseXPT3Potion = false
getgenv().AutoUseStarsT4Potion = false
getgenv().AutoUseLuckT2Potion = false
getgenv().AutoHatchSakuraEgg = false
getgenv().AntiAfkEnabled = true
getgenv().PotionLoop = false

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "PetStarSim Made with Love in mind <3", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

OrionLib:MakeNotification({
	Name = "Credits",
	Content = "Made By Poke",
	Image = "rbxassetid://10590477450",
	Time = 15
})
OrionLib:MakeNotification({
	Name = "Love<3",
	Content = "Made With Love",
	Image = "rbxassetid://10590477450",
	Time = 15
})
OrionLib:MakeNotification({
	Name = "ANTI AFK",
	Content = "LOADED",
	Image = "rbxassetid://10590477450",
	Time = 15
})

-- Define Tabs in the desired order
local AutoFarmTab = Window:MakeTab({
	Name = "AutoFarm",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local EggsTab = Window:MakeTab({
    Name = "EGGS",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local PotionsTab = Window:MakeTab({
    Name = "Potions",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local UpgradesTab = Window:MakeTab({
    Name = "Upgrades",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local TeleportsTab = Window:MakeTab({
    Name = "Teleports",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local WebhookTab = Window:MakeTab({
    Name = "Webhook W.I.P",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local MiscTab = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})


-- Utility Function for Teleporting Player Directly by CFRAME
local function TeleportToArea(area)
    local player = game.Players.LocalPlayer
	local character = player.Character
	if not character or not character:FindFirstChild("HumanoidRootPart") then return end
    
    local rootPart = character.HumanoidRootPart
    
    if area == "Spawn" then
        rootPart.CFrame = CFrame.new(15, 5, -616)
    elseif area == "Autumn Forest" then
        rootPart.CFrame = CFrame.new(12, 5, -815)
    elseif area == "Diamond Cave" then
        rootPart.CFrame = CFrame.new(-215.6, 15.7, -269)
	elseif area == "Flower Garden" then
		rootPart.CFrame = CFrame.new(-11.2, 18.8, -999.9)
    elseif area == "Snow Forest" then
		rootPart.CFrame = CFrame.new(-186.9, 15.7, -1128.8)
    elseif area == "Tropical Palms" then
        rootPart.CFrame = CFrame.new(32, 5, -1324)
    end
end

-- AutoFarm Tab
AutoFarmTab:AddDropdown({
	Name = "AutoFarm Area",
	Default = "Spawn",
	Options = {"Spawn", "Autumn Forest", "Diamond Cave", "Flower Garden", "Snow Forest", "Tropical Palms", "Mine Shaft", "Diamond Mine", "Magical Forest", "Sakura Forest",},
	Callback = function(Value)
		getgenv().AutoFarmArea = Value
	end
})

AutoFarmTab:AddToggle({
    Name = "AutoFarm Toggle (VERY FAST)",
    Default = false,
    Callback = function(Value)
        getgenv().AutoFarmEnabled = Value

        if getgenv().AutoFarmEnabled then
            spawn(function()
                while getgenv().AutoFarmEnabled do
                    local starFolder
                    for _, folder in ipairs(workspace.LocalStars:GetChildren()) do
                        if folder:IsA("Folder") and folder.Name:lower() == getgenv().AutoFarmArea:lower() then
                            starFolder = folder
                            break
                        end
                    end
                    
                    if starFolder then
                        -- Teleport all stars to the player's position at once
                        for _, obj in ipairs(starFolder:GetChildren()) do
                            if tonumber(obj.Name) then
                                local primaryPart = obj:FindFirstChild("Primary")
                                if primaryPart and primaryPart:IsA("BasePart") then
                                    -- Teleport each star's Primary part to the player's HumanoidRootPart position
                                    primaryPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                                end
                            end
                        end
                        
                        -- Collect all the stars after teleporting
                        for _, obj in ipairs(starFolder:GetChildren()) do
                            if tonumber(obj.Name) then
                                pcall(function()
                                    local args = {
                                        [1] = getgenv().AutoFarmArea
                                    }
                                    game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("collectStar"):FireServer(unpack(args))
                                end)
                            end
                        end
                    end
                    wait()
                    if not getgenv().AutoFarmEnabled then break end
                end
            end)
        end
    end    
})


AutoFarmTab:AddSlider({
	Name = "AutoFarm Speed",
	Min = 0.01,
	Max = 1,
	Default = 0.01,
	Color = Color3.fromRGB(255, 165, 0),
	Increment = 0.01,
	ValueName = "Seconds",
	Callback = function(Value)
		getgenv().AutoFarmSpeed = Value
	end    
})

AutoFarmTab:AddToggle({
    Name = "Auto Evolve",
    Default = false,
    Callback = function(Value)
        getgenv().AutoEvolve = Value

        if getgenv().AutoEvolve then
            spawn(function()
                while getgenv().AutoEvolve do
                     local player = game:GetService("Players").LocalPlayer
                    if player and player:FindFirstChild("Data") and player.Data:FindFirstChild("Pets") then
                        local pets = player.Data.Pets:GetChildren()
                        local petCounts = {}

                        for _, pet in ipairs(pets) do
                            if pet:IsA("Model") and pet:FindFirstChild("Primary") then
                                local petName = pet.Primary.Name
                                petCounts[petName] = (petCounts[petName] or 0) + 1
                            end
                        end

                        for petName, count in pairs(petCounts) do
                            if count >= 5 then
                                local args = {
                                    [1] = petName
                                }
                                pcall(function()
                                    game:GetService("ReplicatedStorage"):WaitForChild("PetSystem"):WaitForChild("Remote"):WaitForChild("evolvePet"):InvokeServer(unpack(args))
                                end)
                                wait(0.5)
                            end
                        end
                    end
                     wait(5)
                   if not getgenv().AutoEvolve then break end
                end
            end)
        end
    end
})

-- Misc Tab
MiscTab:AddButton({
	Name = "Kill GUI",
	Callback = function()
		OrionLib:Destroy()
	end  
})

MiscTab:AddToggle({
	Name = "Change Walk Speed",
	Default = false,
	Callback = function(Value)
		getgenv().AutoChangeWalkSpeed = Value
		
		local player = game.Players.LocalPlayer
		local character = player.Character
		local humanoid = character and character:FindFirstChild("Humanoid")
		if not humanoid then return end
		
		if getgenv().AutoChangeWalkSpeed then
			spawn(function()
				while getgenv().AutoChangeWalkSpeed do
					humanoid.WalkSpeed = getgenv().WalkSpeedValue
					wait()
				end
			end)
		else
			humanoid.WalkSpeed = 16
		end
	end
})

MiscTab:AddSlider({
	Name = "Walk Speed",
	Min = 16,
	Max = 500,
	Default = 50,
	Color = Color3.fromRGB(255, 255, 0),
	Increment = 1,
	ValueName = "Speed",
	Callback = function(Value)
		getgenv().WalkSpeedValue = Value
	end
})

MiscTab:AddToggle({
    Name = "Auto Equip Best Pets",
    Default = false,
    Callback = function(Value)
        getgenv().AutoEquipBestPets = Value
        
        if getgenv().AutoEquipBestPets then
            spawn(function()
                while getgenv().AutoEquipBestPets do
                    local args = {
                        [1] = "*all",
                        [2] = true
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("PetSystem"):WaitForChild("Remote"):WaitForChild("EquipPet"):InvokeServer(unpack(args))
                    end)
                    wait(1)
                    if not getgenv().AutoEquipBestPets then break end
                end
            end)
        end
    end
})

MiscTab:AddSlider({
    Name = "Jump Power",
    Min = 50,
    Max = 200,
    Default = 50,
    Color = Color3.fromRGB(0, 255, 255),
    Increment = 1,
    ValueName = "Power",
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local character = player.Character
        local humanoid = character and character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid.JumpPower = Value
        end
    end
})


MiscTab:AddButton({
    Name = "Infinite Yield",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end
})
-- Misc Tab continued
MiscTab:AddToggle({
    Name = "Auto Complete Quests",
    Default = false,
    Callback = function(Value)
        getgenv().AutoCompleteQuests = Value
		if getgenv().AutoCompleteQuests then
            spawn(function()
                while getgenv().AutoCompleteQuests do
                    local args = {
                        [1] = "COLLECT_QUEST"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("finishQuest"):InvokeServer(unpack(args))
                    end)
					wait(1)
                   if not getgenv().AutoCompleteQuests then break end
                end
            end)
        end
    end
})

-- Eggs Tab
EggsTab:AddDropdown({
	Name = "Egg Open Amount",
	Default = "Open x3",
	Options = {"Open x1", "Open x3"},
	Callback = function(Value)
		getgenv().EggOpenAmount = Value
	end
})

EggsTab:AddToggle({
	Name = "Autumn Egg",
	Default = false,
	Callback = function(Value)
		getgenv().AutoHatchAutumnEgg = Value
        
        if getgenv().AutoHatchAutumnEgg then
			spawn(function()
				while getgenv().AutoHatchAutumnEgg do
					local openAmount = getgenv().EggOpenAmount == "Open x1" and "Open" or "Open x3"
					local args = {
						[1] = "Autumn Egg",
						[2] = openAmount
					}
					pcall(function()
						game:GetService("ReplicatedStorage"):WaitForChild("PetSystem"):WaitForChild("Remote"):WaitForChild("Hatch"):InvokeServer(unpack(args))
					end)
                    wait(0.1)
                   if not getgenv().AutoHatchAutumnEgg then break end
				end
			end)
		end
	end
})
--Spawn Egg
EggsTab:AddToggle({
    Name = "SPAWN Egg",
    Default = false,
    Callback = function(Value)
        getgenv().AutoHatchSpawnEgg = Value
        
        if getgenv().AutoHatchSpawnEgg then
            spawn(function()
                while getgenv().AutoHatchSpawnEgg do
					local openAmount = getgenv().EggOpenAmount == "Open x1" and "Open" or "Open x3"
                    local args = {
                        [1] = "Basic Egg",
						[2] = openAmount
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("PetSystem"):WaitForChild("Remote"):WaitForChild("Hatch"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                   if not getgenv().AutoHatchSpawnEgg then break end
                end
            end)
        end
    end
})
--Eggs tab
EggsTab:AddToggle({
    Name = "Bee Egg",
    Default = false,
    Callback = function(Value)
        getgenv().AutoHatchBeeEgg = Value
        
        if getgenv().AutoHatchBeeEgg then
            spawn(function()
                while getgenv().AutoHatchBeeEgg do
					local openAmount = getgenv().EggOpenAmount == "Open x1" and "Open" or "Open x3"
                    local args = {
                        [1] = "Bee Egg",
						[2] = openAmount
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("PetSystem"):WaitForChild("Remote"):WaitForChild("Hatch"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                   if not getgenv().AutoHatchBeeEgg then break end
                end
            end)
        end
    end
})

EggsTab:AddToggle({
    Name = "Snow Egg",
    Default = false,
    Callback = function(Value)
        getgenv().AutoHatchSnowEgg = Value
        
        if getgenv().AutoHatchSnowEgg then
            spawn(function()
                while getgenv().AutoHatchSnowEgg do
					local openAmount = getgenv().EggOpenAmount == "Open x1" and "Open" or "Open x3"
                    local args = {
                        [1] = "Snow Egg",
						[2] = openAmount
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("PetSystem"):WaitForChild("Remote"):WaitForChild("Hatch"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                   if not getgenv().AutoHatchSnowEgg then break end
                end
            end)
        end
    end
})

EggsTab:AddToggle({
    Name = "Tropical Egg",
    Default = false,
    Callback = function(Value)
        getgenv().AutoHatchTropicalEgg = Value
        
        if getgenv().AutoHatchTropicalEgg then
            spawn(function()
                while getgenv().AutoHatchTropicalEgg do
                    local openAmount = getgenv().EggOpenAmount == "Open x1" and "Open" or "Open x3"
                    local args = {
                        [1] = "Tropical Egg",
                        [2] = openAmount
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("PetSystem"):WaitForChild("Remote"):WaitForChild("Hatch"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                    if not getgenv().AutoHatchTropicalEgg then break end
                end
            end)
        end
    end
})



-- Potions Tab
PotionsTab:AddToggle({
    Name = "Stars T1",
    Default = false,
    Callback = function(Value)
        getgenv().AutoUseStarsPotion = Value
        
        if getgenv().AutoUseStarsPotion then
            spawn(function()
                while getgenv().AutoUseStarsPotion do
                    local args = {
                        [1] = "Stars T1"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                   if not getgenv().AutoUseStarsPotion then break end
                end
            end)
        end
    end
})

PotionsTab:AddToggle({
    Name = "Gems T1",
    Default = false,
    Callback = function(Value)
        getgenv().AutoUseGemsPotion = Value
        
        if getgenv().AutoUseGemsPotion then
            spawn(function()
                while getgenv().AutoUseGemsPotion do
                    local args = {
                        [1] = "Gems T1"
                    }
                    pcall(function()
                       game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                  if not getgenv().AutoUseGemsPotion then break end
                end
            end)
        end
    end
})

PotionsTab:AddToggle({
    Name = "Luck T1",
    Default = false,
    Callback = function(Value)
        getgenv().AutoUseLuckPotion = Value
        
        if getgenv().AutoUseLuckPotion then
            spawn(function()
                while getgenv().AutoUseLuckPotion do
                    local args = {
                        [1] = "Luck T1"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                  if not getgenv().AutoUseLuckPotion then break end
                end
            end)
        end
    end
})


PotionsTab:AddToggle({
    Name = "Treasure Hunter T1",
    Default = false,
    Callback = function(Value)
        getgenv().AutoUseTreasureHunterPotion = Value
        
        if getgenv().AutoUseTreasureHunterPotion then
            spawn(function()
                while getgenv().AutoUseTreasureHunterPotion do
                    local args = {
                        [1] = "Treasure Hunter T1"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                 if not getgenv().AutoUseTreasureHunterPotion then break end
                end
            end)
        end
    end
})

PotionsTab:AddToggle({
    Name = "Stars T2",
    Default = false,
    Callback = function(Value)
        getgenv().AutoUseStarsT2Potion = Value
        
        if getgenv().AutoUseStarsT2Potion then
            spawn(function()
                while getgenv().AutoUseStarsT2Potion do
                    local args = {
                        [1] = "Stars T2"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                    if not getgenv().AutoUseStarsT2Potion then break end
                end
            end)
        end
    end
})

PotionsTab:AddToggle({
    Name = "XP T2",
    Default = false,
    Callback = function(Value)
        getgenv().AutoUseXPT2Potion = Value
        
        if getgenv().AutoUseXPT2Potion then
            spawn(function()
                while getgenv().AutoUseXPT2Potion do
                    local args = {
                        [1] = "XP T2"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                     if not getgenv().AutoUseXPT2Potion then break end
                end
            end)
        end
    end
})

PotionsTab:AddToggle({
    Name = "Gems T2",
    Default = false,
    Callback = function(Value)
         getgenv().AutoUseGemsT2Potion = Value
        
        if getgenv().AutoUseGemsT2Potion then
            spawn(function()
                while getgenv().AutoUseGemsT2Potion do
                    local args = {
                        [1] = "Gems T2"
                    }
                     pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                  if not getgenv().AutoUseGemsT2Potion then break end
                end
            end)
        end
    end
})

PotionsTab:AddToggle({
    Name = "Treasure Hunter T2",
    Default = false,
    Callback = function(Value)
        getgenv().AutoUseTreasureHunterT2Potion = Value
        
        if getgenv().AutoUseTreasureHunterT2Potion then
             spawn(function()
                while getgenv().AutoUseTreasureHunterT2Potion do
                    local args = {
                        [1] = "Treasure Hunter T2"
                    }
                     pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                    if not getgenv().AutoUseTreasureHunterT2Potion then break end
                end
            end)
        end
    end
})

PotionsTab:AddToggle({
    Name = "Stars T3",
    Default = false,
    Callback = function(Value)
        getgenv().AutoUseStarsT3Potion = Value
        
        if getgenv().AutoUseStarsT3Potion then
            spawn(function()
                while getgenv().AutoUseStarsT3Potion do
                    local args = {
                        [1] = "Stars T3"
                    }
                    pcall(function()
                       game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                     if not getgenv().AutoUseStarsT3Potion then break end
                end
            end)
        end
    end
})

PotionsTab:AddToggle({
    Name = "Luck T4",
    Default = false,
    Callback = function(Value)
        getgenv().AutoUseLuckT4Potion = Value
        
        if getgenv().AutoUseLuckT4Potion then
            spawn(function()
                while getgenv().AutoUseLuckT4Potion do
                    local args = {
                        [1] = "Luck T4"
                    }
                     pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                    if not getgenv().AutoUseLuckT4Potion then break end
                end
            end)
        end
    end
})

PotionsTab:AddToggle({
    Name = "Treasure Hunter T3",
    Default = false,
    Callback = function(Value)
        getgenv().AutoUseTreasureHunterT3Potion = Value
        
        if getgenv().AutoUseTreasureHunterT3Potion then
             spawn(function()
                while getgenv().AutoUseTreasureHunterT3Potion do
                    local args = {
                        [1] = "Treasure Hunter T3"
                    }
                     pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                     if not getgenv().AutoUseTreasureHunterT3Potion then break end
                end
            end)
        end
    end
})

PotionsTab:AddToggle({
    Name = "Gems T3",
    Default = false,
    Callback = function(Value)
        getgenv().AutoUseGemsT3Potion = Value

        if getgenv().AutoUseGemsT3Potion then
            spawn(function()
                while getgenv().AutoUseGemsT3Potion do
                    local args = {
                        [1] = "Gems T3"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                    if not getgenv().AutoUseGemsT3Potion then break end
                end
            end)
        end
    end
})

PotionsTab:AddToggle({
    Name = "Luck T3",
    Default = false,
    Callback = function(Value)
        getgenv().AutoUseLuckT3Potion = Value

        if getgenv().AutoUseLuckT3Potion then
            spawn(function()
                while getgenv().AutoUseLuckT3Potion do
                    local args = {
                        [1] = "Luck T3"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                    if not getgenv().AutoUseLuckT3Potion then break end
                end
            end)
        end
    end
})


-- Upgrades Tab
UpgradesTab:AddToggle({
    Name = "Egg Luck",
    Default = false,
    Callback = function(Value)
        getgenv().AutoBuyEggLuck = Value
        
        if getgenv().AutoBuyEggLuck then
            spawn(function()
                while getgenv().AutoBuyEggLuck do
                    local args = {
                        [1] = "EGG_LUCK"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("buyUpgrade"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                   if not getgenv().AutoBuyEggLuck then break end
                end
            end)
        end
    end
})

UpgradesTab:AddToggle({
    Name = "More Gems",
    Default = false,
    Callback = function(Value)
        getgenv().AutoBuyMoreGems = Value
        
        if getgenv().AutoBuyMoreGems then
            spawn(function()
                while getgenv().AutoBuyMoreGems do
                    local args = {
                        [1] = "MORE_GEMS"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("buyUpgrade"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                  if not getgenv().AutoBuyMoreGems then break end
                end
            end)
        end
    end
})

UpgradesTab:AddToggle({
    Name = "Pet Slots",
    Default = false,
    Callback = function(Value)
        getgenv().AutoBuyPetSlots = Value
        
        if getgenv().AutoBuyPetSlots then
            spawn(function()
                while getgenv().AutoBuyPetSlots do
                    local args = {
                        [1] = "PET_SLOTS"
                    }
                     pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("buyUpgrade"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                    if not getgenv().AutoBuyPetSlots then break end
                end
            end)
        end
    end
})


UpgradesTab:AddToggle({
    Name = "Star Spawn Luck",
    Default = false,
    Callback = function(Value)
        getgenv().AutoBuyStarSpawnLuck = Value
        
        if getgenv().AutoBuyStarSpawnLuck then
            spawn(function()
                while getgenv().AutoBuyStarSpawnLuck do
                    local args = {
                        [1] = "STAR_SPAWN_LUCK"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("buyUpgrade"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                  if not getgenv().AutoBuyStarSpawnLuck then break end
                end
            end)
        end
    end
})

UpgradesTab:AddToggle({
    Name = "Walk Speed",
    Default = false,
    Callback = function(Value)
         getgenv().AutoBuyWalkSpeed = Value
        
         if getgenv().AutoBuyWalkSpeed then
            spawn(function()
                 while getgenv().AutoBuyWalkSpeed do
                    local args = {
                        [1] = "WALK_SPEED"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("buyUpgrade"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                   if not getgenv().AutoBuyWalkSpeed then break end
                end
             end)
         end
    end
})

UpgradesTab:AddToggle({
    Name = "Potion Duration",
    Default = false,
    Callback = function(Value)
        getgenv().AutoBuyPotionDuration = Value
        
        if getgenv().AutoBuyPotionDuration then
           spawn(function()
                while getgenv().AutoBuyPotionDuration do
                    local args = {
                        [1] = "POTION_DURATION"
                    }
                    pcall(function()
                       game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("buyUpgrade"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                    if not getgenv().AutoBuyPotionDuration then break end
                end
             end)
        end
    end
})

-- Teleports Tab
TeleportsTab:AddButton({
    Name = "Spawn",
    Callback = function()
        local args = {
            [1] = "SPAWN"
        }
        pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("teleportRequest"):InvokeServer(unpack(args))
        end)
    end
})

TeleportsTab:AddButton({
    Name = "Leaderboards",
    Callback = function()
        local args = {
            [1] = "Leaderboards"
        }
        pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("teleportRequest"):InvokeServer(unpack(args))
        end)
    end
})

TeleportsTab:AddButton({
    Name = "Autumn Forest",
    Callback = function()
        local args = {
            [1] = "Autumn Forest"
        }
        pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("teleportRequest"):InvokeServer(unpack(args))
        end)
    end
})

TeleportsTab:AddButton({
    Name = "Flower Garden",
    Callback = function()
         local args = {
            [1] = "Flower Garden"
        }
        pcall(function()
           game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("teleportRequest"):InvokeServer(unpack(args))
        end)
    end
})

TeleportsTab:AddButton({
    Name = "Snow Forest",
    Callback = function()
         local args = {
            [1] = "Snow Forest"
        }
        pcall(function()
           game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("teleportRequest"):InvokeServer(unpack(args))
        end)
    end
})

TeleportsTab:AddButton({
    Name = "Tropical Palms",
    Callback = function()
         local args = {
            [1] = "Tropical Palms"
        }
        pcall(function()
           game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("teleportRequest"):InvokeServer(unpack(args))
        end)
    end
})
TeleportsTab:AddButton({
    Name = "MineShaft",
    Callback = function()
local args = {
    [1] = "Mine Shaft"
}

game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("teleportRequest"):InvokeServer(unpack(args))
    end
})

-- Webhook Tab
WebhookTab:AddTextbox({
    Name = "Webhook URL",
    Default = "",
    TextDisappear = true,
    Callback = function(Value)
        getgenv().WebhookURL = Value
    end
})

WebhookTab:AddToggle({
    Name = "Auto Send Hatch Webhook",
    Default = false,
    Callback = function(Value)
        getgenv().AutoSendWebhook = Value
        
        local function sendWebhook(petName, petRarity)
          local webhookURL = getgenv().WebhookURL
          if webhookURL == "" then return end
        
          local data = {
            ["content"] =  "**Hatched Pet:**\nName: " .. petName .. "\nRarity: " .. petRarity,
            ["username"] = "Pet Simulator X Notifier",
            ["avatar_url"] = "https://tr.rbxcdn.com/7e734eb5f5712c0314955f69750b532a/420/420/Image/Png",
          }
        
          local jsonData = game.HttpService:JSONEncode(data)
          
          pcall(function()
            game:HttpGet(webhookURL, true, jsonData, "application/json")
           end)
        end
        
        if getgenv().AutoSendWebhook then
            local oldHatch
            oldHatch = game:GetService("ReplicatedStorage").PetSystem.Remote.Hatch.OnClientInvoke
            game:GetService("ReplicatedStorage").PetSystem.Remote.Hatch.OnClientInvoke = function(...)
                local result = oldHatch(...)
                if result and result.Success == true and result.Pet then
                    sendWebhook(result.Pet.name, result.Pet.rarity)
                end
                return result
            end
          else
           game:GetService("ReplicatedStorage").PetSystem.Remote.Hatch.OnClientInvoke = oldHatch
        end
    end
})
-- Background script to auto-claim level rewards
spawn(function()
	while true do
		pcall(function()
			game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("claimLevelRoad"):InvokeServer()
		end)
		wait(30) -- check every 30 seconds
	end
end)

spawn(function()
	while true do
		for i = 1, 16 do
			local args = {
				[1] = i
			}
			pcall(function()
				game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("claimGift"):InvokeServer(unpack(args))
			end)
			wait(0.1)
		end
		wait(1)
	end
end)
EggsTab:AddToggle({
    Name = "Mine Egg",
    Default = false,
    Callback = function(Value)
        getgenv().AutoHatchMineEgg = Value

        if getgenv().AutoHatchMineEgg then
            spawn(function()
                while getgenv().AutoHatchMineEgg do
                    local args = {
                        [1] = "Mine Egg",
                        [2] = getgenv().EggOpenAmount -- Use the selected amount
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("PetSystem"):WaitForChild("Remote"):WaitForChild("Hatch"):InvokeServer(unpack(args))
                    end)
                    wait(0.1) -- Add a delay to prevent spamming
                    if not getgenv().AutoHatchMineEgg then break end
                end
            end)
        end
    end
})
getgenv().AutoUseXPT3Potion = false -- Define the global variable

-- Add toggle for XP T3 potion
PotionsTab:AddToggle({
    Name = "XP T3",
    Default = false,
    Callback = function(Value)
        getgenv().AutoUseXPT3Potion = Value

        if getgenv().AutoUseXPT3Potion then
            spawn(function()
                while getgenv().AutoUseXPT3Potion do
                    local args = {
                        [1] = "XP T3"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(1) -- Delay between potion usages
                    if not getgenv().AutoUseXPT3Potion then break end
                end
            end)
        end
    end
})
PotionsTab:AddToggle({
    Name = "Stars T4",
    Default = false,
    Callback = function(Value)
        getgenv().AutoUseStarsT4Potion = Value

        if getgenv().AutoUseStarsT4Potion then
            spawn(function()
                while getgenv().AutoUseStarsT4Potion do
                    local args = {
                        [1] = "Stars T4"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(1) -- Delay between potion usages
                    if not getgenv().AutoUseStarsT4Potion then break end
                end
            end)
        end
    end
})
PotionsTab:AddToggle({
    Name = "Luck T2",
    Default = false,
    Callback = function(Value)
        getgenv().AutoUseLuckT2Potion = Value

        if getgenv().AutoUseLuckT2Potion then
            spawn(function()
                while getgenv().AutoUseLuckT2Potion do
                    local args = {
                        [1] = "Luck T2"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(1) -- Delay between potion usages
                    if not getgenv().AutoUseLuckT2Potion then break end
                end
            end)
        end
    end
})
TeleportsTab:AddButton({
    Name = "Diamond Mine",
    Callback = function()
        local args = {
            [1] = "Diamond Mine"
        }
        pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("teleportRequest"):InvokeServer(unpack(args))
        end)
    end
})
TeleportsTab:AddButton({
    Name = "Magical Forest",
    Callback = function()
        local args = {
            [1] = "Magical Forest"
        }
        pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("teleportRequest"):InvokeServer(unpack(args))
        end)
    end
})
EggsTab:AddToggle({
    Name = "Magical Egg",
    Default = false,
    Callback = function(Value)
        getgenv().AutoHatchMagicalEgg = Value

        if getgenv().AutoHatchMagicalEgg then
            spawn(function()
                while getgenv().AutoHatchMagicalEgg do
                    local openAmount = getgenv().EggOpenAmount == "Open x1" and "Open" or "Open x3"
                    local args = {
                        [1] = "Magical Egg",
                        [2] = openAmount
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("PetSystem"):WaitForChild("Remote"):WaitForChild("Hatch"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                    if not getgenv().AutoHatchMagicalEgg then break end
                end
            end)
        end
    end
})
TeleportsTab:AddButton({
    Name = "Sakura Forest",
    Callback = function()
        local args = {
            [1] = "Sakura Forest"
        }
        pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("teleportRequest"):InvokeServer(unpack(args))
        end)
    end
})
EggsTab:AddToggle({
    Name = "Sakura Egg",
    Default = false,
    Callback = function(Value)
        getgenv().AutoHatchSakuraEgg = Value

        if getgenv().AutoHatchSakuraEgg then
            spawn(function()
                while getgenv().AutoHatchSakuraEgg do
                    local openAmount = getgenv().EggOpenAmount == "Open x1" and "Open" or "Open x3"
                    local args = {
                        [1] = "Sakura Egg",
                        [2] = openAmount
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("PetSystem"):WaitForChild("Remote"):WaitForChild("Hatch"):InvokeServer(unpack(args))
                    end)
                    wait(0.1)
                    if not getgenv().AutoHatchSakuraEgg then break end
                end
            end)
        end
    end
})
-- Function to start Anti-AFK
local function startAntiAfk()
    -- Disconnect any existing AntiAfkCon connection before creating a new one
    if getgenv().AntiAfkCon then
        getgenv().AntiAfkCon:Disconnect()
    end

    -- Connect to the Idled event to simulate right-click when idle
    getgenv().AntiAfkCon = game:GetService("Players").LocalPlayer.Idled:Connect(function()
        local VirtualUser = game:GetService("VirtualUser")
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new()) -- Simulate a right-click at a specific position
    end)
end

-- Start the Anti-AFK feature immediately since it's always true
startAntiAfk()
PotionsTab:AddToggle({
    Name = "GEM T4",
    Default = false,
    Callback = function(Value)
        getgenv().PotionLoopEnabled = Value -- Set the toggle value

        if getgenv().PotionLoopEnabled then
            spawn(function()
                while getgenv().PotionLoopEnabled do
                    local args = {
                        [1] = "Gems T4" -- Replace this with your desired potion name
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Core"):WaitForChild("Remote"):WaitForChild("usePotion"):InvokeServer(unpack(args))
                    end)
                    wait(0.1) -- Adjust delay as needed
                    if not getgenv().PotionLoopEnabled then break end
                end
            end)
        end
	end
})


OrionLib:Init()
